name: CI/CD Pipeline

on:
  push:
    branches: [ main, dashboard ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run tests
        working-directory: ./server
        run: npm run test:ci
        env:
          NODE_ENV: test
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: server/coverage/

  build:
    name: Build Docker Images
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Server Image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: false
          tags: fitflow-server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Client Image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: false
          tags: fitflow-client:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-hub:
    name: Push to Docker Hub
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Server
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fitflow-server:latest
            ${{ secrets.DOCKER_USERNAME }}/fitflow-server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and Push Client
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fitflow-client:latest
            ${{ secrets.DOCKER_USERNAME }}/fitflow-client:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max